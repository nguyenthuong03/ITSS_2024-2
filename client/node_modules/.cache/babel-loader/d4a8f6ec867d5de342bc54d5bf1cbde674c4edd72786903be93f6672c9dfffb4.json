{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\OneFolder\\\\Semester 2024.2\\\\ITSS2\\\\ITSS_2024-2\\\\client\\\\src\\\\components\\\\TaskTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTimer({\n  task,\n  onComplete\n}) {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(parseInt(task.time) * 60); // Convert minutes to seconds\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      onComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft, onComplete]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0110ang th\\u1EF1c hi\\u1EC7n: \", task.task]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-display\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        children: isRunning ? 'Tạm dừng' : 'Bắt đầu'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onComplete,\n        children: \"Ho\\xE0n th\\xE0nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTimer, \"royoXLgQmkc99a6AyxNKXPn8f3g=\");\n_c = TaskTimer;\nexport default TaskTimer;\nvar _c;\n$RefreshReg$(_c, \"TaskTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskTimer","task","onComplete","_s","timeLeft","setTimeLeft","parseInt","time","isRunning","setIsRunning","timer","setInterval","prevTime","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/OneFolder/Semester 2024.2/ITSS2/ITSS_2024-2/client/src/components/TaskTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TaskTimer({ task, onComplete }) {\r\n  const [timeLeft, setTimeLeft] = useState(parseInt(task.time) * 60); // Convert minutes to seconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      onComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft, onComplete]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-timer\">\r\n      <h2>Đang thực hiện: {task.task}</h2>\r\n      <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n      <div className=\"timer-controls\">\r\n        <button onClick={() => setIsRunning(!isRunning)}>\r\n          {isRunning ? 'Tạm dừng' : 'Bắt đầu'}\r\n        </button>\r\n        <button onClick={onComplete}>Hoàn thành</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTimer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACU,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EACpE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK;IACT,IAAIF,SAAS,IAAIJ,QAAQ,GAAG,CAAC,EAAE;MAC7BM,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBN,WAAW,CAAEO,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACzC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIR,QAAQ,KAAK,CAAC,EAAE;MACzBF,UAAU,CAAC,CAAC;IACd;IACA,OAAO,MAAMW,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAACF,SAAS,EAAEJ,QAAQ,EAAEF,UAAU,CAAC,CAAC;EAErC,MAAMY,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,IAAIG,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACrE,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBxB,OAAA;MAAAwB,QAAA,GAAI,iCAAgB,EAACtB,IAAI,CAACA,IAAI;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpC5B,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAET,UAAU,CAACV,QAAQ;IAAC;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3D5B,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BxB,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,CAACD,SAAS,CAAE;QAAAe,QAAA,EAC7Cf,SAAS,GAAG,UAAU,GAAG;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACT5B,OAAA;QAAQ6B,OAAO,EAAE1B,UAAW;QAAAqB,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAlCQH,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}